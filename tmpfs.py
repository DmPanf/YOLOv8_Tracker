import os
import shutil
import subprocess
import tempfile
import configparser

from dotenv import load_dotenv
from moviepy.editor import VideoFileClip
from telegram.ext import Application, CommandHandler, MessageHandler, filters
from ultralytics import YOLO


# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é tmpfs
os.makedirs('./mnt/my_tmpfs', exist_ok=True)
# –ú–æ–Ω—Ç–∏—Ä—É–µ–º tmpfs
subprocess.run(["sudo", "mount", "-t", "tmpfs", "-o", "size=512m", "tmpfs", "./mnt/my_tmpfs"], check=True)

# –ü–∞—Ä—Å–∏–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª
config = configparser.ConfigParser()
config.read('bot_config.ini')

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
TOKEN = os.environ.get("TG_TOKEN")

# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å YOLO
model = YOLO(config['YOLO']['MODEL_PATH'])

# —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update, context):
    await update.message.reply_text('ü§ñ –ü—Ä–∏—à–ª–∏—Ç–µ –≤–∏–¥–µ–æ –¥–ª—è —Ç—Ä–µ–∫–∏–Ω–≥–∞ –ª—é–¥–µ–π!')

# —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–∏–¥–µ–æ
async def tracking(update, context):

    # —É–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É runs —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
    shutil.rmtree('./mnt/my_tmpfs/runs', ignore_errors=True)

    # —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    delete_message = await update.message.reply_text('üé¶ –í–∏–¥–µ–æ –ø–æ–ª—É—á–µ–Ω–æ.\n–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞... ‚ôªÔ∏è')

    # –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    new_file = await update.message.video.get_file()

    # –∏–º—è —Ñ–∞–π–ª–∞ –≤ tmpfs
    video_name = str(new_file.file_path).split("/")[-1]

    # —Å–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –≤ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
    tmp_file = tempfile.NamedTemporaryFile(delete=True, dir="./mnt/my_tmpfs")
    tmp_filename = tmp_file.name

    # —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    new_file.download(custom_path=tmp_filename)

    # —à–∏—Ä–∏–Ω–∞ –∏ –≤—ã—Å–æ—Ç–∞ –∫–∞–¥—Ä–æ–≤
    height = update.message.video.height
    width = update.message.video.width

    # –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –≤–∏–¥–µ–æ
    if video_name.endswith('MOV'):
        # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ .mov –≤ .mp4
        video = VideoFileClip(tmp_filename)
        video.write_videofile(f"{tmp_filename[:-4]}.mp4")

    # —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤
    # experiment_name = "experiment" + datetime.datetime.now().strftime('%Y%m%d%H%M%S')  # –∏–º—è –ø–æ–¥–ø–∞–ø–∫–∏ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞
    model.track(source=f"{tmp_filename[:-4]}.mp4",  # –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                conf=0.35,             # –ø–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                iou=0.5,               # intersection over union
                imgsz=(640, 640),      # —Ä–∞–∑–º–µ—Ä –∫–∞–¥—Ä–∞
                show=False,            # –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                save=True,             # —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                classes=[0, 1, 2, 9],  # –∫–ª–∞—Å—Å—ã –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
                save_txt=False,        # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ç–∫–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
                save_conf=False)       # —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –æ–±—ä–µ–∫—Ç–æ–≤
                # project='my_dir',     # –ø—É—Ç—å –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                #name=experiment_name) # –∏–º—è –ø–∞–ø–∫–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –ø—Ä–æ–µ–∫—Ç–∞

    # –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ .mp4 –≤ .mov
    #video = VideoFileClip(f"./mnt/my_tmpfs/runs/detect/track/{tmp_filename[:-4]}.mp4")
    #video.write_videofile(f"./mnt/my_tmpfs/runs/detect/track/{tmp_filename[:-4]}_mov.mov", codec='libx264')

    # —É–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –±–æ—Ç–∞
    await context.bot.deleteMessage(chat_id=update.message.chat_id, message_id=delete_message.message_id)

    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    await update.message.reply_text('‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ‚ùáÔ∏è')
    await update.message.reply_video(f"./mnt/my_tmpfs/runs/detect/track/{tmp_filename[:-4]}_mov.mov", width=width, height=height)


def main():
    # —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ .write_timeout(30)
    application = Application.builder().token(TOKEN).read_timeout(100).build()
    print('üîò –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...')

    # –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))

    # –¥–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∏–¥–µ–æ–∑–∞–ø–∏—Å–µ–π
    application.add_handler(MessageHandler(filters.VIDEO, tracking))

    # –∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å Ctrl-C)
    application.run_polling()

if __name__ == "__main__":
    main()
